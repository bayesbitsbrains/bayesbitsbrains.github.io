merge xs@(x:xt) ys@(y:yt) | x <= y    = x : merge xt ys
| otherwise = y : merge xs yt
split (x:y:zs) = let (xs,ys) = split zs in (x:xs,y:ys)
mergeSort []  = []
mergeSort [x] = [x]
mergeSort xs  = let (as,bs) = split xs
in merge (mergeSort as) (mergeSort bs)